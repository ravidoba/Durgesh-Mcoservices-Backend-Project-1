spring.application.name=QUIZ-SERVICE
server.port=8091

# Config-Client Configuration
spring.config.import=optional:configserver:http://localhost:8084

# Kafka Consumer Configuration
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=console-consumer-94543
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto-offset-reset=earliest

#Logging Configuration
logging.level.root=error
#-------------------------------------------------------------------------------------------------------------------------------
#spring.profiles.active=prod

#Actuator
#management.health.circuitbreakers.enabled=true
#management.endpoints.web.exposure.include=health
#management.endpoint.health.show-details=always

# Resilience4j Circuit Breaker Configuration
# getAllQuizzesCircuitBreaker
#resilience4j.circuitbreaker.instances.getAllQuizzesCircuitBreaker.register-health-indicator=true
#resilience4j.circuitbreaker.instances.getAllQuizzesCircuitBreaker.event-consumer-buffer-size=10
#resilience4j.circuitbreaker.instances.getAllQuizzesCircuitBreaker.failure-rate-threshold=50
#resilience4j.circuitbreaker.instances.getAllQuizzesCircuitBreaker.minimum-number-of-calls=5
#resilience4j.circuitbreaker.instances.getAllQuizzesCircuitBreaker.automatic-transition-from-open-to-half-open-enabled=true
#resilience4j.circuitbreaker.instances.getAllQuizzesCircuitBreaker.wait-duration-in-open-state=6s
#resilience4j.circuitbreaker.instances.getAllQuizzesCircuitBreaker.permitted-number-of-calls-in-half-open-state=3
#resilience4j.circuitbreaker.instances.getAllQuizzesCircuitBreaker.sliding-window-size=10
#resilience4j.circuitbreaker.instances.getAllQuizzesCircuitBreaker.sliding-window-type=COUNT_BASED

# Resilience4j Retry Configuration
# getquizbyidretry
#resilience4j.retry.instances.getquizbyidretry.maxAttempts=3
#resilience4j.retry.instances.getquizbyidretry.waitDuration=10s
#resilience4j.retry.instances.getquizbyidretry.enableExponentialBackoff=true
#resilience4j.retry.instances.getquizbyidretry.exponentialBackoffMultiplier=2.0
#resilience4j.retry.instances.getquizbyidretry.ignoreExceptions=java.lang.IllegalArgumentException
#resilience4j.retry.instances.getquizbyidretry.retryExceptions=java.lang.Exception


# Rate Limiter Configuration
#logging.level.io.github.resilience4j.ratelimiter=DEBUG
# Rate limiter for getQuizById endpoint
#resilience4j.ratelimiter.instances.getQuizByIdRateLimiter.limit-for-period=5
#resilience4j.ratelimiter.instances.getQuizByIdRateLimiter.limit-refresh-period=5s
#resilience4j.ratelimiter.instances.getQuizByIdRateLimiter.timeout-duration=5s

# Zipkin Configuration
#management.tracing.sampling.probability=1.0
#logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]


